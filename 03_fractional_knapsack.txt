def fractional_knapsack(value,weight,capacity):
    index = list(range(len(value)))
    ratio = [v/w for v,w in zip(value,weight)]
    index.sort(key=lambda i:ratio[i],reverse=True)
    
    max_value=0
    total_weight=0
    fractions = [0]*len(value)
    
    for i in index:
        if weight[i]<=capacity:
            fractions[i]=1
            max_value+=value[i]
            total_weight+=weight[i]
            capacity-=weight[i]
        else:
            fractions[i]=capacity/weight[i]
            max_value += value[i]*(capacity/weight[i])
            total_weight+=weight[i]*fractions[i]
            break
    return max_value,total_weight,fractions
    
n = int(input('Enter the number of items : '))
value = input('Enter the values of the items in order : ').split()
value = [int(v) for v in value]
weight = input('Enter the weights of the items in order : ').split()
weight = [int(w) for w in weight]
capacity = int(input('Enter the maximum weight : '))

max_value,total_weight,fractions = fractional_knapsack(value,weight,capacity)

print('The maximum value of items that can be carried : ',max_value)
print('The total weight of items that can be carried : ',total_weight)
print('The fractions in which items should be taken : ',fractions)
